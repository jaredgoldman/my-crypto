// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Exchange {
  id              String            @id @db.Uuid
  name            String            @unique
  url             String
  image           String
  status          Status            @default(ACTIVE)
  userExchanges   UserExchange[]
  UserExchangeKey UserExchangeKey[]
}

// TODO: Create seperate table for hashed user secrets
model User {
  id              String            @id @db.Uuid
  email           String            @unique
  status          Status            @default(ACTIVE)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  userExchanges   UserExchange[]
  UserExchangeKey UserExchangeKey[]
}

model UserSecret {
  id        String   @id @db.Uuid
  userId    String   @unique @db.Uuid
  secret    String
  status    Status   @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Status {
  ACTIVE
  INACTIVE
}

model UserExchange {
  id                String           @id @db.Uuid
  key               UserExchangeKey? @relation(fields: [userExchangeKeyId], references: [id])
  userExchangeKeyId String?          @db.Uuid
  User              User             @relation(fields: [userId], references: [id])
  userId            String           @db.Uuid
  exchange          Exchange         @relation(fields: [exchangeId], references: [id])
  exchangeId        String           @db.Uuid
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  status            Status           @default(ACTIVE)

  @@unique([userId, exchangeId])
}

model UserExchangeKey {
  id           String         @id @db.Uuid
  user         User           @relation(fields: [userId], references: [id])
  userId       String         @db.Uuid
  exchange     Exchange       @relation(fields: [exchangeId], references: [id])
  exchangeId   String         @db.Uuid
  key          String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  status       Status         @default(ACTIVE)
  UserExchange UserExchange[]

  @@unique([userId, exchangeId])
}
